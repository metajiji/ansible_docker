---

docker_version: 26.1.3

# Can be: tarball | package
docker_installation_type: tarball

docker_tarball_release: "{{ docker_version }}"

# Can be: aarch64 | armel | armhf | ppc64le | s390x | x86_64
docker_tarball_arch: x86_64
docker_tarball_url: >-
  https://download.docker.com/linux/static/stable/{{ docker_tarball_arch }}/docker-{{ docker_tarball_release }}.tgz

docker_tarball_bash_completion_enabled: true
docker_tarball_bash_completion_url: >-
  https://github.com/docker/cli/raw/v{{ docker_tarball_release }}/contrib/completion/bash/docker
docker_bash_completion_path: /etc/bash_completion.d/docker
docker_tarball_bash_completion_packages:
  - bash-completion

# Will be symlinked from /opt/docker/ to /usr/local/bin/
docker_tarball_binaries:
  - containerd
  - containerd-shim-runc-v2
  - ctr
  - docker
  - docker-init
  - docker-proxy
  - dockerd
  - runc

docker_package_repo_file: "{{ docker_distro_vars.docker_package_repo_file }}"
docker_package_repo_distribution: "{{ ansible_distribution | lower }}"
docker_package_repo_url: >-
  https://download.docker.com/linux/{{ docker_package_repo_distribution }}/{{ docker_package_repo_file }}
docker_package_repo_name: "{{ docker_distro_vars.docker_package_repo_name }}"

docker_package_gpg_keys: "{{ docker_distro_vars.docker_package_gpg_keys | default([]) }}"
# Example:
# For debian based
# apt-key is deprecated now, for more info read
#  https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html
# docker_package_gpg_keys:
#   - url: https://ftp-master.debian.org/keys/archive-key-6.0.asc

docker_package_enable_repositories: "{{ docker_distro_vars.docker_package_enable_repositories | default([]) }}"
# Example:
# For redhat based
# docker_package_enable_repositories:
#   - name: centos-kernel
#     path: /etc/yum.repos.d/CentOS-x86_64-kernel.repo
#     enabled: 1
# For debian based
# For more info read https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_repository_module.html
# docker_package_enable_repositories:
#   - name: centos-kernel
#     path: /etc/yum.repos.d/CentOS-x86_64-kernel.repo
#     enabled: 1

# https://docs.docker.com/install/linux/docker-ce/centos/
docker_required_packages: "{{ docker_distro_vars.docker_required_packages | default([]) }}"
#  - device-mapper-persistent-data
#  - lvm2
docker_required_packages_extra: []

# Will be merged with docker_required_packages variable
docker_tarball_required_packages:
  - tar

# Will be merged with installation variant: docker_[package|tarball]_packages
docker_packages:
  - iptables
docker_packages_extra: []

# Will be merged with docker_packages variable
docker_package_packages: "{{ docker_distro_vars.docker_package_packages }}"

# https://docs.docker.com/engine/reference/commandline/dockerd/
docker_daemon_json:
  features:
    buildkit: true
  log-driver: json-file  # https://docs.docker.com/config/containers/logging/json-file/
  log-opts:
    max-size: 10m
    max-file: "5"
  max-concurrent-downloads: 3
  max-concurrent-uploads: 5

docker_daemon_json_extra: {}

docker_compose_install: true
docker_compose_plugin_install: true
docker_compose_release: 2.27.0
docker_compose_arch: "{{ docker_tarball_arch }}"
# yamllint disable-line rule:line-length
docker_compose_url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_release }}/docker-compose-linux-{{ docker_compose_arch }}"

docker_compose_required_packages: []

docker_cron_cleanup_enabled: true
docker_cron_cleanup_minute: 0
docker_cron_cleanup_hour: 6

docker_cron_cleanup_command: >-
  docker image prune -af --filter until=24h

docker_cron_cleanup_env:
  PATH: /usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin

docker_first_found_list:
  - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version }}"
  - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}"
  - "{{ ansible_distribution | lower }}"
  - "{{ ansible_os_family | lower }}"
  - "{{ ansible_system | lower }}"
