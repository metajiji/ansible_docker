---

- name: Download docker static binaries
  become: false
  run_once: true
  delegate_to: localhost
  register: _download_docker_static_binaries
  until: _download_docker_static_binaries is succeeded
  retries: 15
  delay: 1
  ansible.builtin.uri:
    url: "{{ docker_tarball_url }}"
    dest: "{{ playbook_dir }}/files/{{ docker_tarball_arch }}-{{ docker_tarball_url | basename }}"
    creates: "{{ playbook_dir }}/files/{{ docker_tarball_arch }}-{{ docker_tarball_url | basename }}"
    mode: "0644"
    status_code:
      - 200
      - 304
  tags:
    - install
    - install-docker
    - tarball-docker-download
    - tarball-download

- name: Create a directory for docker if it does not exist
  become: true
  ansible.builtin.file:
    path: /opt/docker
    state: directory
    mode: "0755"
    owner: root
    group: "0"
  tags:
    - install
    - install-docker

- name: Check installed version
  ansible.builtin.stat:
    path: /opt/docker/INSTALLED.VERSION
  register: _docker_installed_version
  tags:
    - install
    - install-docker

- name: Read /opt/docker/INSTALLED.VERSION file
  ansible.builtin.slurp:
    src: /opt/docker/INSTALLED.VERSION
  register: _docker_installed_version_string
  when: _docker_installed_version.stat.exists
  tags:
    - install
    - install-docker

- name: Download and install docker
  become: true
  when: not _docker_installed_version.stat.exists
        or ((_docker_installed_version_string.content | default('') | b64decode) != _installed_version)
  vars:
    _installed_version: "{{ docker_tarball_arch }}-{{ docker_tarball_release }}"
  block:
    - name: Installing docker binaries
      ansible.builtin.unarchive:
        src: "{{ playbook_dir }}/files/{{ docker_tarball_arch }}-{{ docker_tarball_url | basename }}"
        dest: /opt/docker
        mode: "0644"
        extra_opts:
          - --strip-components=1
      tags:
        - install
        - install-docker

    - name: Save /opt/docker/INSTALLED.VERSION file
      ansible.builtin.copy:
        content: "{{ _installed_version }}"
        dest: /opt/docker/INSTALLED.VERSION
        mode: "0644"
      tags:
        - install
        - install-docker

- name: Create a /etc/containerd directory if it does not exist
  become: true
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: "0755"
    owner: root
    group: "0"
  tags:
    - install
    - install-docker

- name: Create /etc/containerd/config.toml file
  become: true
  ansible.builtin.template:
    dest: /etc/containerd/config.toml
    src: etc/containerd/config.toml.j2
    mode: "0644"
  notify:
    - Systemctl restart-containerd
  tags:
    - install
    - install-docker

- name: Create containerd systemd service unit
  become: true
  ansible.builtin.template:
    dest: /etc/systemd/system/containerd.service
    src: etc/systemd/system/containerd.service.j2
    mode: "0644"
  notify:
    - Systemctl daemon-reload
    - Systemctl restart-containerd
  tags:
    - install
    - install-docker

- name: Create docker config files
  become: true
  ansible.builtin.template:
    dest: "/{{ item }}"
    src: "{{ item }}.j2"
    mode: "0644"
  notify:
    - Systemctl daemon-reload
    - Systemctl restart-docker
  loop:
    - etc/systemd/system/docker.service
    - etc/systemd/system/docker.socket
  tags:
    - install
    - install-docker

- name: Ensure group "docker" exists
  become: true
  ansible.builtin.group:
    name: docker
    state: present
    system: true
  tags:
    - install
    - install-docker

- name: Ensure executable permissions for tarball binaries
  become: true
  ansible.builtin.file:
    path: "/opt/docker/{{ item }}"
    mode: "0755"
    owner: root
    group: "0"
  loop: "{{ docker_tarball_binaries }}"
  tags:
    - install
    - install-docker

- name: Ensure alternatives links is exists
  become: true
  community.general.alternatives:
    name: "{{ item }}"
    link: "/usr/local/bin/{{ item }}"
    path: "/opt/docker/{{ item }}"
  loop: "{{ docker_tarball_binaries }}"
  tags:
    - install
    - install-docker
